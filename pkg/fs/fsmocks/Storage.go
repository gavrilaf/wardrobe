// Code generated by mockery v1.0.0. DO NOT EDIT.

package fsmocks

import (
	context "context"

	fs "github.com/gavrilaf/wardrobe/pkg/fs"
	mock "github.com/stretchr/testify/mock"
)

// Storage is an autogenerated mock type for the Storage type
type Storage struct {
	mock.Mock
}

// CreateObject provides a mock function with given fields: ctx, fo
func (_m *Storage) CreateObject(ctx context.Context, fo fs.Object) error {
	ret := _m.Called(ctx, fo)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, fs.Object) error); ok {
		r0 = rf(ctx, fo)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DeleteObject provides a mock function with given fields: ctx, name
func (_m *Storage) DeleteObject(ctx context.Context, name string) error {
	ret := _m.Called(ctx, name)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string) error); ok {
		r0 = rf(ctx, name)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetObject provides a mock function with given fields: ctx, name
func (_m *Storage) GetObject(ctx context.Context, name string) (fs.Object, error) {
	ret := _m.Called(ctx, name)

	var r0 fs.Object
	if rf, ok := ret.Get(0).(func(context.Context, string) fs.Object); ok {
		r0 = rf(ctx, name)
	} else {
		r0 = ret.Get(0).(fs.Object)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, name)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
